import{r as t,h as s,c as i}from"./p-f24f087d.js";const h=class{constructor(s){t(this,s),this.data=[],this.height=200,this.labelX="REFERENCE SEQUENCE POSITION",this.labelXLeft="START",this.labelXRight="END",this.labelY="ESTIMATED COVERAGE",this.tooltipFormatX="value => `POSITION: ${value}bp`",this.tooltipFormatY="value => `â‰ˆ COVERAGE: ${value}X`",this.unitsX="bp",this.unitsY="X",this.width=600,this.xLimit=0,this.yLimit=0}formatData(t){let s=t;if("string"==typeof t)try{s=JSON.parse(t)}catch(i){s=[],console.warn("Could not process data",i.message)}return s}setDataHandler(t){"string"==typeof this.data&&(this.data=this.formatData(t))}componentWillLoad(){"string"==typeof this.data&&(this.data=this.formatData(this.data))}componentDidUpdate(){if(!this.hostEl)return;const t=this.hostEl.querySelector("nanoshell-linechart");t&&(t.data=this.data)}render(){return s("nanoshell-linechart-label",{"label-x":this.labelX,"label-x-left":this.labelXLeft,"label-x-right":this.labelXRight,"label-y":this.labelY},s("nanoshell-linechart-axis",{"units-x":this.unitsX,"units-y":this.unitsY},s("nanoshell-linechart-tooltip",{"format-x":this.tooltipFormatX,"format-y":this.tooltipFormatY},s("nanoshell-linechart",{data:this.data,width:this.width,height:this.height,"x-limit":this.xLimit,"y-limit":this.yLimit}))))}get hostEl(){return i(this)}static get watchers(){return{data:["setDataHandler"]}}};export{h as epi_coverageplot};